blueprint:
  name: Maintain an 'extended away' state for a person
  description: Select a person, a boolean helper, the desired time period, and a timer helper,
      and this automation will take care of maintaining the provided boolean with a value indicating
      if the given person is away from home for more than the given amount of time.
  domain: automation
  input:
    person:
      name: Person
      description: 'Person, or tracker, to watch (e.g. person.dad, or device_tracker.iphone).'
      selector:
        entity:
    extended_away_boolean:
      name: Extended away indicator
      description: 'A helper of type input_boolean to set.'
      selector:
        entity:
          domain: input_boolean
    extended_away_time:
      name: Extended away time
      description: 'The time, after which a person is considered to be Extended Away (in hours).'
      default: 24
      selector:
        number:
          min: 1
          max: 168
          step: 1
          unit_of_measurement: hrs
          mode: box
    extended_away_timer:
      name: Timer
      description: 'A helper timer this automation needs to keep track of the time a person is being away from home.'
      selector:
        entity:
          domain: timer
  source_url: https://github.com/Reproduktor/ExtendedAwayStateBlueprintHassio/blob/master/ExtendedAwayState.yaml

trigger:
- platform: event
  event_type: timer.finished
  id: timerfinished
  event_data:
    entity_id: !input 'extended_away_timer' #timer.extendedawaytimer_ocino
- platform: state
  entity_id: !input 'person'
  id: home-entered
  to: home
  for:
    hours: 0
    minutes: 0
    seconds: 0
- platform: state
  entity_id: !input 'person'
  id: home-left
  from: home
- platform: homeassistant
  event: start
  id: hass-started
- platform: time_pattern
  id: hass-midnight
  minutes: '01'
  seconds: '30'
  hours: '0'

condition: []

variables:
  var_hours: !input 'extended_away_time'
  var_seconds: "{{ var_hours | int * 3600 }}"

action:
- choose:
  - conditions:
    - condition: trigger
      id: timerfinished
    sequence:
    - service: input_boolean.turn_on
      target:
        entity_id: !input 'extended_away_boolean'

  - conditions:
    - condition: trigger
      id: home-left
    sequence:
    - service: timer.start
      data:
        duration: '{{ var_seconds }}'
      target:
        entity_id: !input 'extended_away_timer'

  - conditions:
    - condition: trigger
      id: home-entered
    sequence:
    - service: timer.cancel
      target:
        entity_id: !input 'extended_away_timer'
    - service: input_boolean.turn_off
      target:
        entity_id: !input 'extended_away_boolean'

  - conditions:
    - condition: or
      conditions:
      - condition: trigger
        id: hass-started
      - condition: trigger
        id: hass-midnight
    sequence:
    - choose:
      - conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: !input 'extended_away_timer'
            state: active
          - condition: state
            entity_id: !input 'person'
            state: home
          - condition: state
            entity_id: !input 'extended_away_boolean'
            state: 'on'
        sequence:
        - service: timer.start
          data:
            duration: '{{ var_seconds }}'
          target:
            entity_id: !input 'extended_away_timer'
      - conditions:
        - condition: state
          entity_id: !input 'person'
          state: home
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: !input 'extended_away_boolean'
      default: []

  default: []

mode: queued
max: 5